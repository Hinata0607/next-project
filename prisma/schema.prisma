generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Userモデル
model User {
  user_id     Int      @id @default(autoincrement())
  first_name  String
  last_name   String
  schedule_id Int?      
  e_mail      String   @unique
  password    String  
  birthday    String
  gender      String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  // 外部キー設定
  schedule Schedule? @relation(fields: [schedule_id], references: [schedule_id])
  cashes   Cash[]
}

// Screenモデル
model Screen {
  screen_id       Int      @id @default(autoincrement())
  screen_capacity Int

  // リレーション
  schedules Schedule[]
}

// Scheduleモデル
model Schedule {
  schedule_id   Int      @id @default(autoincrement())
  screen_id     Int
  movie_id      Int
  seat_ids      Int[]  // seat_idを配列に変更
  movie_start   String

  // 外部キー設定
  screen Screen @relation(fields: [screen_id], references: [screen_id])
  movie  Movie  @relation(fields: [movie_id], references: [movie_id])
  users  User[]
}

// Movieモデル
model Movie {
  movie_id     Int      @id @default(autoincrement())
  movie_name   String
  movie_detail String
  movie_time   Int
  category_id  Int
  movie_image1  String
  movie_image2  String

  // 外部キー設定
  category Category @relation(fields: [category_id], references: [category_id])
  schedules Schedule[]
  cashes     Cash[]
}

// Seatモデル
model Seat {
  seat_id   Int      @id @default(autoincrement())
  seat_point String  @unique
}

// CashMethodモデル
model CashMethod {
  method_id Int      @id @default(autoincrement())
  method    String

  // リレーション
  cashes Cash[]
}

// Priceモデル
model Price {
  price_id Int @id @default(autoincrement())
  price    Int

  // リレーション
  cashes Cash[]
}

// Discountモデル
model Discount {
  discount_id   Int    @id @default(autoincrement())
  discount_type String

  // リレーション
  cashes Cash[]
}

// Categoryモデル
model Category {
  category_id   Int    @id @default(autoincrement())
  category_name String

  // リレーション
  movies Movie[]
}

// Cashモデル
model Cash {
  cash_id     Int @id @default(autoincrement())
  movie_id    Int
  price_id    Int
  user_id     Int
  method_id   Int
  discount_id Int

  // 外部キー設定
  user       User       @relation(fields: [user_id], references: [user_id])
  movie      Movie      @relation(fields: [movie_id], references: [movie_id])
  cashMethod CashMethod @relation(fields: [method_id], references: [method_id])
  price      Price      @relation(fields: [price_id], references: [price_id])
  discount   Discount   @relation(fields: [discount_id], references: [discount_id])
}
